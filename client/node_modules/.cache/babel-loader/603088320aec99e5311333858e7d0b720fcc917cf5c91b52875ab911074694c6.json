{"ast":null,"code":"var _jsxFileName = \"/Users/hector_cardez/Desktop/2025/CINE_SCORE/CINE_SCORE/client/src/components/MoviePage.js\",\n  _s = $RefreshSig$();\n// src/components/MoviePage.js\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./styles/StylesPopularMovies.css\";\nimport { getRatingClass } from \"../helpers/rating\";\nimport favouritesHelper from \"../helpers/favouritesHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  toggleFavourite,\n  getFavouriteImage\n} = favouritesHelper;\nconst MoviePage = () => {\n  _s();\n  const {\n    movieId\n  } = useParams(); // Get movieId from URL\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [isFavourite, setIsFavourite] = useState(false); // Track if movie is in favourites\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/movies/${movieId}`);\n        if (!response.ok) {\n          throw new Error(\"Movie not found\");\n        }\n        const data = await response.json();\n        setMovie(data.movie);\n\n        // Check if this movie is already in favourites and store the information in sessionStorage\n        const storedFavourites = JSON.parse(sessionStorage.getItem(\"favourites\")) || [];\n        setIsFavourite(storedFavourites.some(fav => fav.id === data.movie.id));\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n  const handleFavouriteToggle = () => {\n    const updatedFavouriteState = toggleFavourite(movie, isFavourite);\n    setIsFavourite(updatedFavouriteState);\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-page-img\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fav-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFavouriteToggle,\n            className: \"fav-button\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fav-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: getFavouriteImage(isFavourite),\n                alt: isFavourite ? \"Remove from favourites\" : \"Add to favourites\",\n                className: \"fav-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fav-text\",\n                children: isFavourite ? \"Remove from favourites\" : \"Add to favourites\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-page-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"additional-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release Date: \", movie.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Average Rating:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: getRatingClass(movie.vote_average),\n              children: movie.vote_average\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading movie details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviePage, \"hA76Z9ZPDgtWyKy/jYbV08Kqtds=\", false, function () {\n  return [useParams];\n});\n_c = MoviePage;\nexport default MoviePage;\nvar _c;\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getRatingClass","favouritesHelper","jsxDEV","_jsxDEV","toggleFavourite","getFavouriteImage","MoviePage","_s","movieId","movie","setMovie","error","setError","isFavourite","setIsFavourite","fetchMovieById","response","fetch","ok","Error","data","json","storedFavourites","JSON","parse","sessionStorage","getItem","some","fav","id","err","message","handleFavouriteToggle","updatedFavouriteState","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","poster_path","alt","title","onClick","overview","release_date","vote_average","_c","$RefreshReg$"],"sources":["/Users/hector_cardez/Desktop/2025/CINE_SCORE/CINE_SCORE/client/src/components/MoviePage.js"],"sourcesContent":["// src/components/MoviePage.js\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./styles/StylesPopularMovies.css\";\nimport { getRatingClass } from \"../helpers/rating\";\nimport favouritesHelper from \"../helpers/favouritesHelper\";\n\nconst { toggleFavourite, getFavouriteImage } = favouritesHelper;\n\nconst MoviePage = () => {\n  const { movieId } = useParams(); // Get movieId from URL\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [isFavourite, setIsFavourite] = useState(false); // Track if movie is in favourites\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:8000/api/movies/${movieId}`\n        );\n        if (!response.ok) {\n          throw new Error(\"Movie not found\");\n        }\n        const data = await response.json();\n        setMovie(data.movie);\n\n        // Check if this movie is already in favourites and store the information in sessionStorage\n        const storedFavourites =\n          JSON.parse(sessionStorage.getItem(\"favourites\")) || [];\n        setIsFavourite(\n          storedFavourites.some((fav) => fav.id === data.movie.id)\n        );\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n\n    fetchMovieById();\n  }, [movieId]);\n\n  const handleFavouriteToggle = () => {\n    const updatedFavouriteState = toggleFavourite(movie, isFavourite);\n    setIsFavourite(updatedFavouriteState);\n  };\n\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div className=\"movie-details\">\n      {movie ? (\n        <div className=\"movie-page-container\">\n          <div className=\"movie-page-img\">\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <div className=\"fav-wrapper\">\n              <button onClick={handleFavouriteToggle} className=\"fav-button\">\n                <div className=\"fav-container\">\n                  <img\n                    src={getFavouriteImage(isFavourite)}\n                    alt={\n                      isFavourite\n                        ? \"Remove from favourites\"\n                        : \"Add to favourites\"\n                    }\n                    className=\"fav-icon\"\n                  />\n                  <span className=\"fav-text\">\n                    {isFavourite\n                      ? \"Remove from favourites\"\n                      : \"Add to favourites\"}\n                  </span>\n                </div>\n              </button>\n            </div>\n          </div>\n          <div className=\"movie-page-wrapper\">\n            <h2>{movie.title}</h2>\n            <p>{movie.overview}</p>\n\n            <div className=\"additional-info\">\n              <p>Release Date: {movie.release_date}</p>\n              <h2>\n                Average Rating:\n                <span className={getRatingClass(movie.vote_average)}>\n                  {movie.vote_average}\n                </span>\n              </h2>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>Loading movie details...</div>\n      )}\n    </div>\n  );\n};\n\nexport default MoviePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}