{"ast":null,"code":"var _jsxFileName = \"/Users/hector_cardez/Desktop/2025/CINE_SCORE/CINE_SCORE/client/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/StylesPopularMovies.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\"); // State for the search input\n  const [filteredMovies, setFilteredMovies] = useState([]); // State for filtered movies\n  const [movies, setMovies] = useState([]); // State for all movies\n\n  useEffect(() => {\n    // Fetch movies when the component mounts\n    const fetchMovies = async () => {\n      try {\n        const res = await fetch(\"http://localhost:8000/api/movies/all\");\n        if (!res.ok) {\n          throw new Error(`HTTP error! Status: ${res.status}`);\n        }\n        const data = await res.json();\n        setMovies(data.uniqueMovies || []); // Store all movies\n      } catch (error) {\n        console.error(\"Error fetching all movies:\", error);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  // Update filtered movies based on the search input\n  useEffect(() => {\n    if (searchInput === \"\") {\n      setFilteredMovies([]); // Clear the list if the input is empty\n    } else {\n      const filtered = movies.filter(movie => movie.title.toLowerCase().includes(searchInput.toLowerCase()));\n      setFilteredMovies(filtered);\n    }\n  }, [searchInput, movies]);\n\n  /* Helpers */\n\n  const navigate = useNavigate();\n  const handleMovieClick = movieId => {\n    navigate(`/movies/${movieId}`); // Navigate to the selected movie page\n    setSearchInput(\"\"); // Clear the search input to refresh the search bar\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"movie-search-input\",\n      className: \"search-input\",\n      type: \"text\",\n      placeholder: \"Search for a movie...\",\n      value: searchInput,\n      onChange: e => setSearchInput(e.target.value) // Update the search input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchInput === \"\" ?\n      /*#__PURE__*/\n      // If search bar is empty, show nothing\n      _jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : filteredMovies.length > 0 ?\n      // If matches are found, display movies\n      filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-item\",\n            onClick: () => handleMovieClick(movie.id) // Use the handleMovieClick function\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-search\",\n              src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n              alt: movie.title,\n              loading: \"lazy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)) :\n      /*#__PURE__*/\n      // If no matches, show \"No movies found\"\n      _jsxDEV(\"div\", {\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"KWeEKFEDs6EeF61XwLPx5b1i3gc=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","SearchBar","_s","searchInput","setSearchInput","filteredMovies","setFilteredMovies","movies","setMovies","fetchMovies","res","fetch","ok","Error","status","data","json","uniqueMovies","error","console","filtered","filter","movie","title","toLowerCase","includes","navigate","handleMovieClick","movieId","children","id","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","src","poster_path","alt","loading","_c","$RefreshReg$"],"sources":["/Users/hector_cardez/Desktop/2025/CINE_SCORE/CINE_SCORE/client/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles/StylesPopularMovies.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst SearchBar = () => {\n  const [searchInput, setSearchInput] = useState(\"\"); // State for the search input\n  const [filteredMovies, setFilteredMovies] = useState([]); // State for filtered movies\n  const [movies, setMovies] = useState([]); // State for all movies\n\n  useEffect(() => {\n    // Fetch movies when the component mounts\n    const fetchMovies = async () => {\n      try {\n        const res = await fetch(\"http://localhost:8000/api/movies/all\");\n        if (!res.ok) {\n          throw new Error(`HTTP error! Status: ${res.status}`);\n        }\n        const data = await res.json();\n        setMovies(data.uniqueMovies || []); // Store all movies\n      } catch (error) {\n        console.error(\"Error fetching all movies:\", error);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  // Update filtered movies based on the search input\n  useEffect(() => {\n    if (searchInput === \"\") {\n      setFilteredMovies([]); // Clear the list if the input is empty\n    } else {\n      const filtered = movies.filter((movie) =>\n        movie.title.toLowerCase().includes(searchInput.toLowerCase())\n      );\n      setFilteredMovies(filtered);\n    }\n  }, [searchInput, movies]);\n\n  /* Helpers */\n\n  const navigate = useNavigate();\n\n  const handleMovieClick = (movieId) => {\n    navigate(`/movies/${movieId}`); // Navigate to the selected movie page\n    setSearchInput(\"\"); // Clear the search input to refresh the search bar\n  };\n\n  return (\n    <div>\n      <input\n        id=\"movie-search-input\"\n        className=\"search-input\"\n        type=\"text\"\n        placeholder=\"Search for a movie...\"\n        value={searchInput}\n        onChange={(e) => setSearchInput(e.target.value)} // Update the search input\n      />\n      <div>\n        {searchInput === \"\" ? ( // If search bar is empty, show nothing\n          <div></div>\n        ) : filteredMovies.length > 0 ? ( // If matches are found, display movies\n          filteredMovies.map((movie) => (\n            <div className=\"search-container\" key={movie.id}>\n              <div className=\"search-wrapper\">\n                <div\n                  className=\"movie-item\"\n                  onClick={() => handleMovieClick(movie.id)} // Use the handleMovieClick function\n                >\n                  <img\n                    className=\"img-search\"\n                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    alt={movie.title}\n                    loading=\"lazy\"\n                  />\n                  <p>{movie.title}</p>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          // If no matches, show \"No movies found\"\n          <div>No movies found.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}